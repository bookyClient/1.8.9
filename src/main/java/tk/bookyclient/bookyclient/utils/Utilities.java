package tk.bookyclient.bookyclient.utils;

import net.minecraftforge.fml.common.ModMetadata;

import javax.crypto.KeyGenerator;
import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Utilities {

    @SafeVarargs
    public static <K, V> Map<K, V> createMap(Pair<K, V>... pairs) {
        Map<K, V> map = new HashMap<>();
        for (Pair<K, V> pair : pairs) map.put(pair.getKey(), pair.getValue());
        return map;
    }

    public static ModMetadata fillMetadata(ModMetadata metadata) {
        metadata.autogenerated = false;

        metadata.modId = Constants.MOD_ID;
        metadata.name = Constants.MOD_NAME;
        metadata.version = Constants.VERSION;

        metadata.description = "This is a minecraft client.";
        metadata.authorList = Collections.singletonList(Constants.AUTHOR);

        metadata.updateJSON = "https://" + Constants.MOD_ID + ".tk/update.json";
        metadata.logoFile = "assets/" + Constants.MOD_ID + "/logo.png";
        metadata.url = "https://" + Constants.MOD_ID + ".tk/";

        return metadata;
    }

    public static MessageDigest getSHA512Hasher() {
        try {
            return MessageDigest.getInstance("SHA-512");
        } catch (NoSuchAlgorithmException exception) {
            throw new Error(exception);
        }
    }

    public static KeyGenerator getAESGenerator() {
        try {
            return KeyGenerator.getInstance("AES");
        } catch (NoSuchAlgorithmException exception) {
            throw new Error(exception);
        }
    }
}
